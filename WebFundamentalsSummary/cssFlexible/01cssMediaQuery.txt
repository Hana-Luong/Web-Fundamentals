@media
CSS uses the @media rule to detect information about the device being used to access the website. For example, it can be used to detect the size of the device, its capabilities, and its orientation. For this course, we will be using it to detect the device size, but keep in mind that it is capable of much more.

Different devices
We have three basic categories of devices: phones, tablets, and desktops. Of course 
there are more, but these are the big three. We will focus on using media queries to 
detect which category of device is being used and respond appropriately. To do this, 
weâ€™ll need to know how we define each of these categories.

Device	Size
Phone	Width less than or equal to 480px
Tablet	Width between 481px and 1023px
Desktop	Width greater than or equal to 1024px


Flexible units
Responsive web design is all about making our website fluid and proportional, so 
sometimes it doesn't make sense to make elements on the page have a fixed size in pixels.
We'll still use pixels - for example, we usually use pixels for padding, since we typically want the same amount of padding regardless of screen size - but now we will also use flexible units for the elements on the page that need to be fluid. For example, we can use percentage (%) to set an element to take a certain amount of the available width, and the available width is determined by screen size! Other flexible units include em and rem. The rem unit is a multiplier of the default font size of the user's browser. The em unit is a multiplier of the element's parent. Experiment with these different units to understand how they behave.

Example
Let's say that we have four buttons on our website that we would like to change color 
depending on the size of the screen. We'll give desktop users red buttons, tablet users 
blue buttons, and phone users yellow buttons. We'll give the buttons the class of .navbtn.

To get you started, here's how we would set up a media query in our CSS to notice if the
user's screen is 480 px wide or smaller. If this is true, then we will target all elements 
with the class .navbtn and set their background to be yellow.

@media only screen and (max-width: 480px){
     /* we will set these stylings only if the device is a screen with a width of 480px 
     or less */
     .navbtn {
         background-color: yellow;
     }
}
@media only screen and (min-width: 481px){

}
@media only screen and (min-width: 1024px){
    
}