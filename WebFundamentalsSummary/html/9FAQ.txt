FAQ
Why didn't we cover new HTML5 tags like section, header, footer, main, etc?
HTML5 has more new tags to help developers better structure the website contents. 
For a full list, read here: http://www.w3schools.com/html/html5_new_elements.asp. 
 Although these tags can be useful, older browsers do not yet fully support some 
 of the new HTML5 tags and for this reason, we have decided to focus on the original/old 
 HTML tags for now.  Once you master the original/traditional HTML tags, it's a lot easier 
 to then start using the newer HTML5 tags. Of course, know that older browsers may not be 
 able to access the new HTML tags and your website may appear broken if accessed by an 
 older browser.

How do I know if my HTML is valid?
You can (and should!) use http://validator.w3.org/ to verify your HTML.

What is the difference between an id attribute and a name attribute?
The id attribute identifies your element for the front-end (CSS and JavaScript.) 
It can be used on ANY element.

The name attribute belongs ONLY on form elements and is used in the back-end (PHP, Ruby
 on Rails, etc.) to identify your form's values.

What is the DOM?
The Document Object Model (DOM) is a structured representation of your HTML as generated 
by the browser, allowing access to the elements of your web page so they may be manipulated.
Generally, it is JavaScript that does this manipulation. The DOM is notoriously hard to 
define, so here's a metaphor:

Let's say we have a piece of paper that says "Coding Dojo Rocks!". We take out some 
magnetic letters, go to our fridge, and write out "Coding Dojo Rocks!", as per our paper. 
That paper is your HTML, and the magnets can be considered our DOM.

In a lot of cases, the magnets will remain the same as what is written on our paper, 
so there will be almost no difference between HTML and the DOM. In other cases, we will
want to change the words on the fridge, or alter the color of the magnets, or add other
neat functionality. Changing those things is manipulating the DOM; the HTML paper we 
started with is unchanged, but the DOM is no longer identical

When you see JavaScript that changes the DOM or hear people talking about DOM manipulation,
they are basically talking about interacting with those fridge magnets, after they had 
copied off of our HTML paper.